// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/Msg901.proto

#include "proto/Msg901.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR Msg901::Msg901(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.msg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.msg_id_)*/0
  , /*decltype(_impl_.machine_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg901DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg901DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg901DefaultTypeInternal() {}
  union {
    Msg901 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg901DefaultTypeInternal _Msg901_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2fMsg901_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_proto_2fMsg901_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_proto_2fMsg901_2eproto = nullptr;

const uint32_t TableStruct_proto_2fMsg901_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Msg901, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Msg901, _impl_.msg_id_),
  PROTOBUF_FIELD_OFFSET(::Msg901, _impl_.machine_id_),
  PROTOBUF_FIELD_OFFSET(::Msg901, _impl_.msg_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Msg901)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_Msg901_default_instance_._instance,
};

const char descriptor_table_protodef_proto_2fMsg901_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022proto/Msg901.proto\"9\n\006Msg901\022\016\n\006msg_id"
  "\030\001 \001(\002\022\022\n\nmachine_id\030\002 \001(\005\022\013\n\003msg\030\003 \001(\tb"
  "\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_proto_2fMsg901_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fMsg901_2eproto = {
    false, false, 87, descriptor_table_protodef_proto_2fMsg901_2eproto,
    "proto/Msg901.proto",
    &descriptor_table_proto_2fMsg901_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_proto_2fMsg901_2eproto::offsets,
    file_level_metadata_proto_2fMsg901_2eproto, file_level_enum_descriptors_proto_2fMsg901_2eproto,
    file_level_service_descriptors_proto_2fMsg901_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fMsg901_2eproto_getter() {
  return &descriptor_table_proto_2fMsg901_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fMsg901_2eproto(&descriptor_table_proto_2fMsg901_2eproto);

// ===================================================================

class Msg901::_Internal {
 public:
};

Msg901::Msg901(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Msg901)
}
Msg901::Msg901(const Msg901& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg901* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.msg_id_){}
    , decltype(_impl_.machine_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg().empty()) {
    _this->_impl_.msg_.Set(from._internal_msg(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.msg_id_, &from._impl_.msg_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.machine_id_) -
    reinterpret_cast<char*>(&_impl_.msg_id_)) + sizeof(_impl_.machine_id_));
  // @@protoc_insertion_point(copy_constructor:Msg901)
}

inline void Msg901::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.msg_){}
    , decltype(_impl_.msg_id_){0}
    , decltype(_impl_.machine_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.msg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.msg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Msg901::~Msg901() {
  // @@protoc_insertion_point(destructor:Msg901)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg901::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.msg_.Destroy();
}

void Msg901::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg901::Clear() {
// @@protoc_insertion_point(message_clear_start:Msg901)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  ::memset(&_impl_.msg_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.machine_id_) -
      reinterpret_cast<char*>(&_impl_.msg_id_)) + sizeof(_impl_.machine_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg901::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float msg_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          _impl_.msg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // int32 machine_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.machine_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Msg901.msg"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg901::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Msg901)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float msg_id = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_msg_id = this->_internal_msg_id();
  uint32_t raw_msg_id;
  memcpy(&raw_msg_id, &tmp_msg_id, sizeof(tmp_msg_id));
  if (raw_msg_id != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(1, this->_internal_msg_id(), target);
  }

  // int32 machine_id = 2;
  if (this->_internal_machine_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_machine_id(), target);
  }

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Msg901.msg");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Msg901)
  return target;
}

size_t Msg901::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Msg901)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string msg = 3;
  if (!this->_internal_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg());
  }

  // float msg_id = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_msg_id = this->_internal_msg_id();
  uint32_t raw_msg_id;
  memcpy(&raw_msg_id, &tmp_msg_id, sizeof(tmp_msg_id));
  if (raw_msg_id != 0) {
    total_size += 1 + 4;
  }

  // int32 machine_id = 2;
  if (this->_internal_machine_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_machine_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg901::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg901::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg901::GetClassData() const { return &_class_data_; }


void Msg901::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg901*>(&to_msg);
  auto& from = static_cast<const Msg901&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Msg901)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_msg_id = from._internal_msg_id();
  uint32_t raw_msg_id;
  memcpy(&raw_msg_id, &tmp_msg_id, sizeof(tmp_msg_id));
  if (raw_msg_id != 0) {
    _this->_internal_set_msg_id(from._internal_msg_id());
  }
  if (from._internal_machine_id() != 0) {
    _this->_internal_set_machine_id(from._internal_machine_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg901::CopyFrom(const Msg901& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Msg901)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg901::IsInitialized() const {
  return true;
}

void Msg901::InternalSwap(Msg901* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.msg_, lhs_arena,
      &other->_impl_.msg_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg901, _impl_.machine_id_)
      + sizeof(Msg901::_impl_.machine_id_)
      - PROTOBUF_FIELD_OFFSET(Msg901, _impl_.msg_id_)>(
          reinterpret_cast<char*>(&_impl_.msg_id_),
          reinterpret_cast<char*>(&other->_impl_.msg_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg901::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fMsg901_2eproto_getter, &descriptor_table_proto_2fMsg901_2eproto_once,
      file_level_metadata_proto_2fMsg901_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Msg901*
Arena::CreateMaybeMessage< ::Msg901 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Msg901 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
